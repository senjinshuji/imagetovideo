version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: image_to_video
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./image-to-video-backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/image_to_video
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      KLING_ACCESS_KEY: ${KLING_ACCESS_KEY}
      KLING_SECRET_KEY: ${KLING_SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./image-to-video-backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./image-to-video-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000/api/v1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      KLING_ACCESS_KEY: ${KLING_ACCESS_KEY}
      KLING_SECRET_KEY: ${KLING_SECRET_KEY}
    depends_on:
      - backend
    volumes:
      - ./image-to-video-frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data: